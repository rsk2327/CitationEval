from autogen_agentchat.agents import AssistantAgent

search_agent_prompt = """
You are a helpful agent that generates search queries or provides web research guidance for any topic. Given a topic, output a single search query term.
Output only a single search query and nothing else as shown in the examples below.

Example 1
Topic : Impact of landslides
Search Query : Landslides wiki

Example 2
Topic : Declining population of Japan
Search Query : Birth rates stats for Japan  
"""

code_agent_prompt = """You are a Python coding expert. Given a requirement or logic, write working Python code and explain it."""

writer_agent_prompt = """You are a research report writer. Given takeaways, findings, or conclusions, write a coherent report."""

research_agent_prompt = """ You are a primary research coordinator agent. Your job is to:
        1. Understand the research task
        2. Coordinate with specialized agents to complete the research
        3. Explicitly call specialized agents when needed using specific formats
        4. Synthesize information and present a final report

        You can work with these specialized agents by including specific tags in your messages:
        - Use [SEARCH QUERY: your question] to ask the SearchAgent for information
        - Use [CODE REQUEST: your requirements] to ask the CodeAgent to write Python code
        - Use [WRITE REPORT: your instructions] to ask the WriterAgent to create content

        For example:
        - "I need information about transformer models. [SEARCH QUERY: What are the key innovations in transformer architectures?]"
        - "I need code to analyze this data. [CODE REQUEST: Create a Python function to visualize attention mechanisms.]"
        - "Let's create the final report. [WRITE REPORT: Write a comprehensive report on the research findings.]"

        You control the research flow. After receiving responses from specialized agents, review the information and decide what to do next.
        When the research is complete, include "RESEARCH COMPLETE. FINAL REPORT:" in your message."""

citation_agent_prompt = """
You are an expert agent part of a citation evaluation system. The evaluation system helps evaluate the accuracy for citations provided for answers generated by an automated system.
The system takes as input the question-answer pair along with the citation provided for the answer. These citations could be from any of the documents used to answer the question.

Your task is to find useful and relevant text from any of the participating documents to help evaluate the citation. You have access to the following agents to help
with this task : 
1. Literal Search Agent : Given the answer and a specific document, this agent identifies key words in the answer and searches for exact matches for that term
in the document, returning the word along with its surrounding text. 
2. Semantic Search Agent : Given the answer and a specific document, this agent generates semantically similar/relevant phrases and searches for matching chunks 
from the vector database. 
 

"""

def get_agents(model_client):
    search_agent = AssistantAgent(
        name="SearchAgent",
        description='An agent for searching, finding useful info on a particular topic',
        model_client=model_client,
        system_message=search_agent_prompt
    )

    code_agent = AssistantAgent(
        name="CodeAgent",
        description = 'An agent that generates python code given the implementation logic/requirement',
        model_client=model_client,
        system_message=code_agent_prompt
    )

    writer_agent = AssistantAgent(
        name="WriterAgent",
        description='An agent that helps write scientific reports',
        model_client=model_client,
        system_message=writer_agent_prompt
    )

    researcher_agent = AssistantAgent(
        name="ResearcherAgent",
        description='A key planning agent that helps identify the next agent to select based on current context/ available info',
        model_client=model_client,
        system_message=research_agent_prompt
    )

    return researcher_agent, writer_agent, code_agent, search_agent